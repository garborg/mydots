[user]
	email = se@n-garb.org
	name = Sean Garborg
[github]
	user = garborg
[push]
	default = simple # use git 2.x behavior even on 1.x
[color]
	ui = auto
[color "diff"]
	meta = yellow bold
[core]
	# alternative: https://github.com/so-fancy/diff-so-fancy
	pager = ~/.config/git/diff-highlight | less
[diff]
	indentHeuristic = true # use git 2.17+ behavior on 2.11-2.16
[alias]
	ck = checkout
	d = diff -D -M
	dc = diff -D -M --cached
	ds = diff -D -M --stat -r
	f = "! f() { git fetch -tp $@; git fetch -p $@; }; f"
	# lg* aliai work with log flags like '--all', '--stat', etc.
	lg = log --graph --date=relative --pretty=format:'%C(auto)%h %d %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n%w(0,4,4)%-b%n%n%-N'
	lgg = log --graph --date=relative --pretty=format:'%C(auto)%h %d %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	lgs = log --graph --decorate --oneline --simplify-by-decoration
	local-branches = !git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }'
	ahead-branches = !git branch -vv | cut -c 3- | awk '/^[^[]+\\[[^]]+:[^]]*ahead/ { print $1 }'
	m = merge --ff-only
	pr = "!f() { git fetch origin refs/pull/$1/head:$2; git checkout $2; }; f" # pass args [PR #] & [new branch name], and it fetches, creates, checks out
	publish = !git push -u origin $(git symbolic-ref --short HEAD)
	s = status
	unstage = reset HEAD --
	untrack = rm --cache --
	wipe = "!f() { rev=$(git rev-parse ${1-HEAD}); git add -A && git commit --allow-empty -qm 'WIPE SAVEPOINT' && git reset $rev --hard; }; f" # diff vs reset --hard HEAD?
[credential]
	helper = cache --timeout 3600 # = osxkeychain on osx
[merge]
	tool = vimdiff
	defaultToUpstream = true # use git 2.x behavior even on 1.x
